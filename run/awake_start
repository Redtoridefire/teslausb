#!/bin/bash -eu

if [ ! -x /root/bin/tesla_api.py ] || [ ! -s /mutable/cache.json ] || [[ ! -n $TESLAFI_API_TOKEN ]]
then
  log "not keeping car awake."
  exit
fi

function ping {
  while true
  do
    if [[ -n $TESLA_REFRESH_TOKEN ]]
    # Use Tesla API to keep car awake
    then
      if /root/bin/tesla_api.py streaming_ping
      then
        log "Contact car every 90s using Tesla API to keep it awake."
        sleep 90
      else
        log "Failed to contact car using Tesla API, retrying in 5s..."
        sleep 5
      fi
    fi

    if [[ -n $TESLAFI_API_TOKEN ]]
    # Use TeslaFi API to keep car awake
    then
      if [[ $(curl -s -H "Authorization: Bearer $TESLAFI_API_TOKEN" "https://www.teslafi.com/feed.php?command=wake") = "Wake command received" ]]
      then
        # TeslaFi's default sleep timer is 15min (900s). No need to contact too often to prevent API lockout (max 3 calls/min).
        log "Contact car every 10min using TeslaFi API to keep it awake."
        sleep 600
      else
        log "Failed to keep car awake using TeslaFI API, retrying in 90s..."
        sleep 90
      fi
    fi    
  done
}

case "${TESLA_WAKE_MODE:-stream}" in
  sentry)
    is_sentry_mode_enabled=$(/root/bin/tesla_api.py is_sentry_mode_enabled | tr '[:upper:]' '[:lower:]')
    if [ "false" = "${is_sentry_mode_enabled}" ]
    then
      log "Temporarily enabling Sentry Mode to keep car awake."
      touch /tmp/disable_sentry_after_archiving
      /root/bin/tesla_api.py enable_sentry_mode &>> "${LOG_FILE}"
    fi
    ;;
  stream)
    log "Starting background task to keep car awake."
    ping &
    echo $! > /tmp/keep_awake_task_pid
    ;;
  *)
    log "Unknown TESLA_WAKE_MODE: ${TESLA_WAKE_MODE}."
    ;;
esac
